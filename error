#!/bin/bash

# Configuration Variables
OMEGA="omega"
IP="http://10.0.34.144:9090"
LOKI_HOST="http://10.0.34.147:3100"
TEMPO_HOST="http://10.0.34.193:3200"
TRUE="true"
ENDPOINT="/api/vl/write"
VALUES="values.yml"
NAMESPACE="alloy"

# Check if kubectl and helm are installed
echo "Checking if kubectl and helm are installed..."
command -v kubectl &>/dev/null || { echo "kubectl not found, installing..."; sudo apt-get install -y kubectl; }
command -v helm &>/dev/null || { echo "helm not found, installing..."; sudo apt-get install -y apt-transport-https && curl -fsSL https://get.helm.sh/helm-v3.8.2-linux-amd64.tar.gz | tar -xz && sudo mv linux-amd64/helm /usr/local/bin/helm; }

# Download and Install kubectl if not installed
echo "Starting download of kubectl..."
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
echo "Making kubectl binary executable..."
chmod +x kubectl
echo "Moving kubectl to /usr/local/bin..."
sudo mv kubectl /usr/local/bin/

# Install Helm
echo "Install Prerequisites for Helm (if not already installed)"
sudo apt-get install apt-transport-https -y

# Install Helm (Helm 3)
echo "Install Helm (Helm 3)"
curl -O https://raw.githubusercontent.com/helm/helm/main/scripts.get-helm-3 | bash scripts.get-helm-3

# Create a Namespace for Monitoring
echo "Creating namespace alloy"
kubectl create namespace $NAMESPACE || echo "Namespace $NAMESPACE already exists"

# Add Grafana Helm Repository and Update
echo "Adding Grafana Helm chart repository..."
helm repo add grafana https://grafana.github.io/helm-charts
echo "Updating Helm repository..."
helm repo update

# Fetch and Modify values.yml
echo "Fetching the default values.yml from Grafana Helm chart..."
helm show values grafana/k8s-monitoring > $VALUES

# Modify values.yml file for cluster and endpoints
echo "Modifying values.yml..."
sed -i "/cluster:/,/^ *name:/s/name: \"\"/name: \"$OMEGA\"/" "$VALUES"
IP=$(echo "$IP" | sed 's/\//\\\//g')
sed -i "/prometheus:/,/^ *host:/s/host: \"\"/host: \"$IP\"/" "$VALUES"
sed -i -e "/^\s*loki:/,/^\s*host:/ s|^\(\s*host:\).*|\1 \"$LOKI_HOST\"|" "$VALUES"
sed -i -e "/^\s*tempo:/,/^\s*host:/ s|^\(\s*host:\).*|\1 \"$TEMPO_HOST\"|" "$VALUES"
sed -i "/queryEndpoint:/,/^ writeEndpoint:/s|writeEndpoint: .|writeEndpoint: $ENDPOINT|" "$VALUES"
sed -i "/traces:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"

# Uncomment additional services to enable
sed -i "/kepler:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"
sed -i "/node-exporter:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"
sed -i "/cluster_events:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"
sed -i "/kube-state-metrics:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"
sed -i "/prometheus-node-exporter:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"
sed -i "/prometheus-operator-crds:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"
sed -i "/opencost:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"

# Install the Helm Chart with Modified Configuration
echo "Installing Grafana Monitoring Stack..."
helm install -n $NAMESPACE grafana-k8s-monitoring grafana/k8s-monitoring -f $VALUES

# Verify that all necessary pods are running
echo "Verifying pods in the alloy namespace..."
kubectl get pods -n $NAMESPACE

# Login to Grafana (in case it's set up)
GRAFANA_URL="http://<grafana-server-ip>:3000"
echo "Access Grafana at $GRAFANA_URL. Default credentials: admin/admin"

# Visualization Setup in Grafana
echo "Setting up Kubernetes Dashboards in Grafana..."

# Import prebuilt Kubernetes Dashboards into monitoring stack
# You can download dashboards from Grafana's website or manually import them using Grafana API or UI
echo "Importing Kubernetes Dashboards into Grafana..."

# Example to login and import dashboards if using API (authentication might be required)
# curl -X POST -H "Authorization: Bearer <api-key>" -H "Content-Type: application/json" \
# -d '{"dashboard": <dashboard JSON>}' \
# "$GRAFANA_URL/api/dashboards/db"

# Tip: Once inside Grafana, go to Dashboards > Import, and choose your imported Kubernetes dashboards.

# Monitoring Cluster Overview
echo "Once dashboards are imported, go to Grafana's Dashboard to monitor Kubernetes Cluster health."
echo "Monitor Cluster Overview, Node Details, Workloads, Namespaces, etc."
echo "Script completed!"
