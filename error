#!/bin/bash

# Configuration Variables
OMEGA="omega"
IP="http://10.0.34.144:9090"
LOKI_HOST="http://10.0.34.147:3100"
TEMPO_HOST="http://10.0.34.193:3200"
TRUE="true"
ENDPOINT="/api/vl/write"
VALUES="values.yml"
NAMESPACE="alloy"

# Function to log messages
log() {
    echo "$(date +'%Y-%m-%d %H:%M:%S') - $1"
}

# Step 1: Install kubectl
log "Starting download of kubectl ..."
curl -Lo kubectl "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
chmod +x kubectl
sudo mv kubectl /usr/local/bin/
log "Successfully installed kubectl"

# Step 2: Install Helm (Helm 3)
log "Installing Helm (v3) ..."
sudo apt-get install apt-transport-https -y
curl -O https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
log "Successfully installed Helm"

# Step 3: Create Kubernetes namespace 'alloy' for monitoring
log "Creating namespace 'alloy' ..."
kubectl create namespace $NAMESPACE || log "Namespace '$NAMESPACE' already exists"

# Step 4: Add the official Grafana Helm chart repository
log "Adding Grafana Helm chart repository ..."
helm repo add grafana https://grafana.github.io/helm-charts
helm repo update

# Step 5: Fetch the default values.yml file from the Grafana Helm chart
log "Fetching the default values.yml from Grafana Helm chart ..."
helm show values grafana/k8s-monitoring > $VALUES

# Step 6: Modify values.yml file for custom configurations
log "Modifying values.yml ..."
sed -i "/cluster:/,/^ *name:/s/name: \"\"/name: \"$OMEGA\"/" "$VALUES"
IP=$(echo "$IP" | sed 's/\//\\\//g')
sed -i "/prometheus:/,/^ *host:/s/host: \"\"/host: \"$IP\"/" "$VALUES"
sed -i -e "/^\s*loki:/,/^\s*host:/ s|^\(\s*host:\).*|\1 \"$LOKI_HOST\"|" "$VALUES"
sed -i -e "/^\s*tempo:/,/^\s*host:/ s|^\(\s*host:\).*|\1 \"$TEMPO_HOST\"|" "$VALUES"
sed -i "/queryEndpoint:/,/^ writeEndpoint:/s|writeEndpoint: .|writeEndpoint: $ENDPOINT|" "$VALUES"
sed -i "/traces:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"

# Uncomment additional services to enable
sed -i "/kepler:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"
sed -i "/node-exporter:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"
sed -i "/cluster_events:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"
sed -i "/kube-state-metrics:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"
sed -i "/prometheus-node-exporter:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"
sed -i "/prometheus-operator-crds:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"
sed -i "/opencost:/,/^ *enabled: false/s/false/$TRUE/" "$VALUES"

# Step 7: Install Grafana monitoring stack with modified values.yml
log "Installing Grafana monitoring stack using Helm ..."
helm install -n $NAMESPACE grafana-k8s-monitoring grafana/k8s-monitoring -f $VALUES

# Step 8: Verify the pods are running in the alloy namespace
log "Verifying Grafana monitoring stack pods in the '$NAMESPACE' namespace ..."
kubectl get pods -n $NAMESPACE

log "Grafana monitoring stack installation completed!"
